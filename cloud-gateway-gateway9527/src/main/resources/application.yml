server:
  port: 9527


# 集群版
spring:
  application:
    name: cloud-gateway
  cloud:
    # gateway 网关配置
    gateway:
      discovery:
        locator:
          #开启从注册中心动态创建路由的功能，利用微服务名进行路由
          enabled: true
      routes:
        #路由的ID，没有固定规则但要求唯一，建议配合服务名
        - id: payment_route
          #匹配后提供服务的路由地址 #集群服务路由地址
          uri: lb://cloud-payment-service
          #断言
          predicates:
            # 路径相匹配的进行路由
            - Path=/payment/get/**
        #路由的ID，没有固定规则但要求唯一，建议配合服务名
        - id: payment_route_lb
          #匹配后提供服务的路由地址 #集群服务路由地址
          uri: lb://cloud-payment-service
          predicates:
            # 路径相匹配的进行路由
            - Path=/payment/get/lb
            # 时间在此之后的进行路由 日期可以使用 ZonedDateTime.now();
            - After=2020-08-29T16:47:09.015+08:00[Asia/Shanghai]
            # 时间在此之前的进行路由 日期可以使用 ZonedDateTime.now();
            - Before=2020-08-29T16:47:09.015+08:00[Asia/Shanghai]
            # 时间在此之间的进行路由 日期可以使用 ZonedDateTime.now();
            - Between=2020-08-29T16:47:09.015+08:00[Asia/Shanghai],2020-08-29T16:47:09.015+08:00[Asia/Shanghai]
            # cookie 包含 key=key，value 匹配正则表达式 aa 的进行路由
            - Cookie=key, aa
            # header 包含 key=X-Request-Id，value 匹配正则表达式 \d+ 的进行路由
            - Header=X-Request-Id, \d+
            # host 匹配的进行路由
            - Host=**.somehost.org,**.anotherhost.org
            # 请求方法为 Get/Post 的进行路由
            - Method=GET,POST
            # remoteAddr 匹配的进行路由
            - RemoteAddr=192.168.1.1/24


# 单机版
#spring:
#  application:
#    name: cloud-gateway
#  cloud:
#    # gateway 网关配置
#    gateway:
#      routes:
#        #路由的ID，没有固定规则但要求唯一，建议配合服务名
#        - id: payment_route
#          #匹配后提供服务的路由地址
#          uri: http://localhost:8001
#          #断言
#          predicates:
#              # 路径相匹配的进行路由
#            - Path=/payment/get/**
#        #路由的ID，没有固定规则但要求唯一，建议配合服务名
#        - id: payment_route_lb
#          #匹配后提供服务的路由地址
#          uri: http://localhost:8001
#          predicates:
#            # 路径相匹配的进行路由
#            - Path=/payment/get/lb


eureka:
  instance:
    hostname: localhost
    #所在主机ip
    ip-address: 127.0.0.1
    #将自己的ip地址注册到Eureka服务中
    prefer-ip-address: true
    #指定实例id
    instance-id: ${spring.application.name}:${server.port}
    #eureka客户端向服务端发送心跳时间间隔，默认30s
    lease-renewal-interval-in-seconds: 30
    #eureka服务端在收到最后一次心跳后的等待时间，超时将删除服务，90s
    lease-expiration-duration-in-seconds: 90
  client:
    # 表示是否注册进eureka,默认为true
    register-with-eureka: true
    # 表示是否从EurekaServer抓取已有注册信息，默认为true，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka,http://127.0.0.1:7002/eureka