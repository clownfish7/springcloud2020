server:
  port: 80

spring:
  application:
    name: cloud-consumer-feign-order #服务名称

eureka:
  instance:
    hostname: localhost
    #所在主机ip
    ip-address: 127.0.0.1
    #将自己的ip地址注册到Eureka服务中
    prefer-ip-address: true
    #指定实例id
    instance-id: ${spring.application.name}:${server.port}
    #eureka客户端向服务端发送心跳时间间隔，默认30s
    lease-renewal-interval-in-seconds: 30
    #eureka服务端在收到最后一次心跳后的等待时间，超时将删除服务，90s
    lease-expiration-duration-in-seconds: 90
  client:
    # 表示是否注册进eureka,默认为true
    register-with-eureka: true
    # 表示是否从EurekaServer抓取已有注册信息，默认为true，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka,http://127.0.0.1:7002/eureka


ribbon:
  #请求处理的超时时间
  ReadTimeout: 8000
  #请求连接的超时时间
  ConnectTimeout: 5000
  #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器,不包括首次调用
  MaxAutoRetries: 2
  #切换实例的重试次数,不包括首次调用
  MaxAutoRetriesNextServer: 3
  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  OkToRetryOnAllOperations: false

logging:
  level:
    com.clownfish7.springcloud.service.*: debug
